{"mappings":"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","sources":["typescript/script.ts"],"sourcesContent":["const password = document.querySelector(\".password\") as HTMLInputElement;\r\nconst checboxes = document.querySelectorAll<HTMLInputElement>(\".checkbox\");\r\nconst passwordLenghtInput =\r\n  document.querySelector<HTMLInputElement>(\".password-length\");\r\nconst lenghtText = document.querySelector(\".length\") as HTMLDivElement;\r\nconst btnGenerate = document.querySelector<HTMLButtonElement>(\".btn-generate\");\r\nconst btnCopy = document.querySelector<HTMLButtonElement>(\".btn-copy\");\r\nconst icon = document.querySelector(\"i\") as HTMLElement;\r\ninterface Chars {\r\n  az: string;\r\n  AZ: string;\r\n  numbers: string;\r\n  special: string;\r\n}\r\ninterface Options {\r\n  elements: string[];\r\n  length: number;\r\n}\r\nconst chars: Chars = {\r\n  az: \"abcdefghijklmnopqrstuvwxyz\",\r\n  AZ: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\r\n  numbers: \"0123456789\",\r\n  special: \"!@#$%^&*()\",\r\n};\r\nlet options: Options = {\r\n  elements: [\"a-z\", \"A-Z\", \"0-9\", \"!-@\"],\r\n  length: 15,\r\n};\r\n\r\nfunction generatePassword(): string {\r\n  if (options.elements.length === 0) {\r\n    return \"You must select at least one option!\";\r\n  }\r\n\r\n  const chooseChars: string[] = [];\r\n  let password: string[] = [];\r\n\r\n  if (options.elements.includes(\"a-z\")) {\r\n    chooseChars.push(chars.az);\r\n  }\r\n  if (options.elements.includes(\"A-Z\")) {\r\n    chooseChars.push(chars.AZ);\r\n  }\r\n  if (options.elements.includes(\"0-9\")) {\r\n    chooseChars.push(chars.numbers);\r\n  }\r\n  if (options.elements.includes(\"!-@\")) {\r\n    chooseChars.push(chars.special);\r\n  }\r\n\r\n  for (let i: number = 0; i < options.length; i++) {\r\n    const randomArrayChars: number = Math.floor(\r\n      Math.random() * chooseChars.length\r\n    );\r\n    const lengthOfRandomArrayChars: number =\r\n      chooseChars[randomArrayChars].length;\r\n    const character: string =\r\n      chooseChars[randomArrayChars][\r\n        Math.floor(Math.random() * lengthOfRandomArrayChars)\r\n      ];\r\n\r\n    password.push(character);\r\n  }\r\n\r\n  if (checkPassword(password.join(\"\"), chooseChars)) return password.join(\"\");\r\n  if (!checkPassword(password.join(\"\"), chooseChars)) generatePassword();\r\n\r\n  return \"\";\r\n}\r\nfunction checkPassword(password: string, chooseChars: string[]): boolean {\r\n  let conditions: boolean[] = [];\r\n\r\n  chooseChars.forEach((element) => {\r\n    switch (element) {\r\n      case chars.az:\r\n        password.match(/[a-z]/g)\r\n          ? conditions.push(true)\r\n          : conditions.push(false);\r\n        break;\r\n      case chars.AZ:\r\n        password.match(/[A-Z]/g)\r\n          ? conditions.push(true)\r\n          : conditions.push(false);\r\n        break;\r\n      case chars.numbers:\r\n        password.match(/[0-9]/g)\r\n          ? conditions.push(true)\r\n          : conditions.push(false);\r\n        break;\r\n      case chars.special:\r\n        password.match(/[^/w]/g)\r\n          ? conditions.push(true)\r\n          : conditions.push(false);\r\n        break;\r\n    }\r\n  });\r\n\r\n  if (conditions.every((elementCondition) => elementCondition === true))\r\n    return true;\r\n  else return false;\r\n}\r\nasync function copyText(text: string) {\r\n  try {\r\n    await navigator.clipboard.writeText(text);\r\n  } catch {\r\n    alert(\"Failed to copy: \");\r\n  }\r\n}\r\n\r\nchecboxes.forEach((checbox: HTMLInputElement, index: number) => {\r\n  checbox.addEventListener(\"change\", function () {\r\n    if (!checbox.checked) {\r\n      const value: string = String(checbox.dataset.option);\r\n      const indexOfValue = options.elements.indexOf(value);\r\n      options.elements.splice(indexOfValue, 1);\r\n    } else if (checbox.checked) {\r\n      const value: string = String(checbox.dataset.option);\r\n      options.elements.push(value);\r\n    }\r\n    password.value = generatePassword();\r\n  });\r\n});\r\npasswordLenghtInput?.addEventListener(\"input\", function () {\r\n  options.length = +this.value;\r\n  lenghtText.innerHTML = `Length: ${this.value}`;\r\n  password.value = generatePassword();\r\n});\r\nbtnGenerate?.addEventListener(\"click\", function () {\r\n  password.value = generatePassword();\r\n});\r\nbtnCopy?.addEventListener(\"click\", function () {\r\n  icon.className = \"bi bi-check-lg\";\r\n  copyText(password.value);\r\n  setTimeout(() => {\r\n    icon.className = \"bi bi-clipboard\";\r\n  }, 1500);\r\n});\r\n\r\npassword.value = generatePassword();\r\n"],"names":[],"version":3,"file":"index.1a755ddd.js.map","sourceRoot":"/__parcel_source_root/"}